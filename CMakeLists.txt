CMAKE_MINIMUM_REQUIRED(VERSION 3.17)

SET (PROJECT yandex_coderun)
PROJECT (${PROJECT})

GET_FILENAME_COMPONENT(FULL_SOURCE_DIR "${${PROJECT}_SOURCE_DIR}" ABSOLUTE)

SET (CMAKE_CXX_STANDARD 20)
SET(CMAKE_C_STANDARD 11)
SET(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmakemodules")

GET_FILENAME_COMPONENT(CMAKE_BINARY_DIR_BASE "${CMAKE_BINARY_DIR}" NAME)

SET (OUTPUT_BINDIR "${CMAKE_BINARY_DIR}/bin")
SET (OUTPUT_LIBDIR ${OUTPUT_BINDIR})
SET (OBJ_DIR "${CMAKE_BINARY_DIR}/obj")

#SET (CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
SET (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_BINDIR})
SET (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})

IF (NOT DEFINED TARGET_CONF)
  SET(TARGET_CONF Debug CACHE "building version" INTERNAL FORCE)
ENDIF (NOT DEFINED TARGET_CONF)

IF (TARGET_CONF STREQUAL Release)
  MESSAGE(Build_type:Release)
  SET (CMAKE_BUILD_TYPE Release)
  SET (PROJECT_BUILD_TYPE Relese)
  SET (develop_flags FALSE)
ENDIF (TARGET_CONF STREQUAL Release)

IF (TARGET_CONF STREQUAL RelWithDebInfo)
  MESSAGE(Build_type:RelWithDebInfo)
  SET (CMAKE_BUILD_TYPE RelWithDebInfo)
  SET (PROJECT_BUILD_TYPE RelWithDebInfo)
  SET (develop_flags FALSE)
ENDIF (TARGET_CONF STREQUAL RelWithDebInfo)

IF (TARGET_CONF STREQUAL Debug)
  MESSAGE(Build_type:Debug)
  SET (CMAKE_BUILD_TYPE Debug)
  SET (PROJECT_BUILD_TYPE Debug)
  SET (develop_flags TRUE)
  ADD_DEFINITIONS(-DDEBUG)
ENDIF (TARGET_CONF STREQUAL Debug)

IF (TARGET_CONF STREQUAL Develop)
  MESSAGE(Build_type:Develop)
  SET (CMAKE_BUILD_TYPE Debug)
  SET (PROJECT_BUILD_TYPE Develop)
  SET (develop_flags TRUE)
  ADD_DEFINITIONS(-DDEBUG)
ENDIF (TARGET_CONF STREQUAL Develop)


SET (OBJ_DIR ${OBJ_DIR}/${CMAKE_BUILD_TYPE})

#sources for embedded projects:
FILE(GLOB SUBDIRS LIST_DIRECTORIES true RELATIVE "${FULL_SOURCE_DIR}" *)
#SET(SUBDIRS task1 task2 task3 task4 task5 topological_sort task_json task_curl )
FOREACH (SUBDIR ${SUBDIRS})
 SET(SUBDIR_PATH "${FULL_SOURCE_DIR}/${SUBDIR}")
 MESSAGE(STATUS ${SUBDIR_PATH})
 IF ( IS_DIRECTORY "${SUBDIR_PATH}" AND EXISTS "${SUBDIR_PATH}" )
	IF ( EXISTS "${SUBDIR_PATH}/CMakeLists.txt" )
	  ADD_SUBDIRECTORY (${SUBDIR_PATH} ${OBJ_DIR}/${SUBDIR})
    ELSE ( EXISTS "${SUBDIR_PATH}/CMakeLists.txt"  )
	  MESSAGE (WARNING "Warning: directory ${SUBDIR} is in SUBDIRS list, but does not contain CMakeLists.txt")
	ENDIF (  EXISTS "${SUBDIR_PATH}/CMakeLists.txt"  )
 ELSE (IS_DIRECTORY "${SUBDIR_PATH}" AND EXISTS "${SUBDIR_PATH}"  )
	#MESSAGE (WARNING "Warning: directory ${SUBDIR} is in SUBDIRS list, but not found or is not directory")
 ENDIF(IS_DIRECTORY "${SUBDIR_PATH}" AND EXISTS "${SUBDIR_PATH}" )

ENDFOREACH (SUBDIR ${SUBDIRS})


